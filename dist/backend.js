!function(e){var t={};function a(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,a),s.l=!0,s.exports}a.m=e,a.c=t,a.d=function(e,t,r){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(a.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)a.d(r,s,function(t){return e[t]}.bind(null,s));return r},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="/",a(a.s=13)}([function(e,t){e.exports=require("fs")},function(e,t){e.exports=require("ws")},function(e,t){e.exports=require("axios")},function(e,t){e.exports=require("crypto-js")},function(e,t){e.exports=require("path")},function(e,t){e.exports=require("transmission")},function(e,t){e.exports=require("node-cron")},function(e,t){e.exports=require("yquem")},function(e,t){e.exports=require("pavie")},function(e,t){e.exports=require("medoc")},function(e,t){e.exports=require("date-fns/format")},function(e,t){e.exports=require("petrus")},function(e,t){e.exports=require("child_process")},function(e,t,a){e.exports=a(14)},function(e,t,a){"use strict";a.r(t);var r=a(1),s=a.n(r),i=a(0),o=a.n(i),n=a(4),c=a.n(n);var l=class{constructor(){}static existFile(e){return!!o.a.existsSync(c.a.resolve(`dist/data/${e}.json`))}static getRoot(){return`${c.a.dirname(a.c[a.s].filename||process.mainModule.filename).split("\\")[0]}/`}static getDirectories(e){if(null!=e)try{return o.a.readdirSync(e,{withFileTypes:!0}).filter(e=>e.isDirectory()).map(e=>e.name)}catch(e){return!1}return!1}static async readFile(e){return o.a.existsSync("dist/data/")||o.a.mkdirSync("dist/data/"),await o.a.promises.readFile(c.a.resolve(`dist/data/${e}.json`),{encoding:"utf-8"}).then(async e=>{try{return JSON.parse(e)}catch(e){throw console.error(e),new Error(`ReadFile : ${e}`)}}).catch(e=>{throw new Error(`ReadFile : ${e}`)})}static async writeFile(e,t){if(null!=t&&"object"==typeof t)return await o.a.promises.writeFile(c.a.resolve(`dist/data/${e}.json`),JSON.stringify(t),{encoding:"utf-8",flag:"w"}).then(()=>!0).catch(e=>{throw new Error(`WriteFile : ${e}`)});throw new Error(`Trying to write '${e}' with no object data!`)}static async removeFile(e){if(null!=e&&""!==e)return await o.a.promises.unlink(c.a.resolve(`dist/data/${e}.json`)).then(()=>!0).catch(e=>{throw new Error(`unlink : ${e}`)});throw new Error("Missing filename !")}},d=a(10),w=a.n(d);var u=class{constructor(){}static async getAll(e){if(e&&"object"==typeof e&&"string"==typeof e.date)return await l.readFile(`activity-${e.date}`,{flag:"r"});throw new Error("params are missings from data !")}static async add(e){const t=`activity-${(new Date).toISOString().slice(0,10)}`;let a=[];try{a=await l.readFile(t)}catch(e){await l.writeFile(t,a)}if(null!=a&&Array.isArray(a)){if(e&&"object"==typeof e&&e.type&&e.object&&e.message)return a.push({date:w()(new Date,"yyyy-MM-dd'T'HH:mm:ss.SSSxxx"),type:e.type,object:e.object,message:e.message}),await l.writeFile(t,a);throw new Error("[Activity] Data params is not wel formatted !")}throw new Error("[Activity] File data is not well formatted !")}};var m=class{constructor(){}static async response(e){switch(e.method){case"getAll":e.results=await u.getAll(e.params).catch(t=>{e.error=t.message});break;case"add":e.results=await u.add(e.params).catch(t=>{e.error=t.message});break;default:console.log(`[Activity] Unknow method : ${e.method}`)}return e}};var h=class{constructor(){}static info(e,t){if(null!=e&&null!=t)return m.response({method:"add",params:{type:"info",object:e,message:t}}),!0;throw new Error("params are missing !")}static warn(e,t){if(null!=e&&null!=t)return m.response({method:"add",params:{type:"warn",object:e,message:t}}),!0;throw new Error("params are missing !")}static error(e,t){if(null!=e&&null!=t)return m.response({method:"add",params:{type:"error",object:e,message:t}}),!0;throw new Error("params are missing !")}};var g=class{constructor(){}static async response(e){switch(e.method){case"getAll":e.results=await l.readFile("directory-config").catch(t=>{e.error=t.message});break;case"update":await l.writeFile("directory-config",e.params),e.results=await l.readFile("directory-config").catch(t=>{e.error=t.message});break;default:console.log(`[Directory] Unknow method : ${e.method}`)}return e}},p=a(11),f=a.n(p);var y=class{constructor(){}static async response(e){switch(e.method){case"searchEpisode":try{h.info("Download",`Searching ${e.params.title}`),e.results=await f.a.search(e.params.title).catch(t=>{e.error=t})}catch(t){h.error("Download",t.message),e.error=t.message}break;default:h.warn("Download",`Unknow method : ${e.method}`),console.warn(`[Download] Unknow method : ${e.method}`)}return e}};var b=class{constructor(){}static response(e){switch(e.method){case"getRoot":e.results=l.getRoot();break;case"getDirectories":e.results=l.getDirectories(e.params.root);break;default:console.log(`[Explorer] Unknow method : ${e.method}`)}return e}},k=a(2),v=a.n(k);class S{constructor(){this.hostname="http://webservice.fanart.tv/v3",this.instance=v.a.create({baseURL:this.hostname,headers:{"api-key":"cec34ee6ab9fbc9c745fddb50c23bd68 "}})}static async response(e){const t=new S;switch(e.method){case"getShow":e.results=await t.instance.get(`tv/id/${e.params.showId}/`).then(e=>e.data).catch(t=>{e.error=t.message});break;default:console.log(`[Fanart] Unknow method : ${e.method}`)}return e}}var F=S,$=a(12);var x=class{constructor(){}static async response(e){switch(e.method){case"getAll":e.results=await l.readFile("update-config");break;case"update":e.params&&(await l.writeFile("update-config",e.params),e.results=await l.readFile("update-config"));break;case"pull":h.info("Git","Searching for update"),e.results=Object($.execSync)("git pull origin master").toString(),h.info("Git",e.results);break;default:h.info("Git",`Unknow method : ${e.method}`),console.log(`[Git] Unknow method : ${e.method}`)}return e}},T=a(8),j=a.n(T),A=a(3),E=a.n(A);var U=class{constructor(){}static async getSettings(e){try{const t=await l.readFile("plex-config");if(t){const a=E.a.AES.decrypt(t.password,e);t.password=a.toString(E.a.enc.Utf8)}return t}catch(e){throw h.error("Plex",e.message),new Error(e)}}static async response(e){let t,a,r;switch(e.method){case"getAll":e.results=await l.readFile("plex-config");break;case"update":await l.writeFile("plex-config",e.params),e.results=await l.readFile("plex-config");break;case"signin":try{a=await this.getSettings(e.params.uuid),t=new j.a(a),r=await t.signin(),r&&(e.results=await t.getUser(),e.results&&e.results.authToken&&(a.token=e.results.authToken,await l.writeFile("plex-config",a)))}catch(t){h.error("Plex",t.message),e.error=t.message}break;case"refresh":try{h.info("Plex","Synchronize tb show library"),a=await this.getSettings(e.params.uuid),t=new j.a(a),await t.signin(),e.results=await t.refresh()}catch(t){h.error("Plex",t.message),e.error=t.message}break;default:h.warn("Plex",`Unknow method : ${e.method}`),console.warn(`[Plex] Unknow method : ${e.method}`)}return e}};var D=class{constructor(){}static async response(e){switch(e.method){case"getAll":e.results=await l.readFile("server-config");break;case"update":await l.writeFile("server-config",e.params),e.results=await l.readFile("server-config");break;default:console.warn(`[Server] Unknow method : ${e.method}`)}return e}},P=a(7),O=a.n(P);var q=class{constructor(){}static async response(e){const t=await l.readFile("subtitles-config"),a=await l.readFile("directory-config");let r=null;switch(e.method){case"getAll":e.results=t;break;case"update":await l.writeFile("subtitles-config",e.params),e.results=await l.readFile("subtitles-config");break;case"search":try{h.info("Subtitles",`Searching subtitle on '${a.to}'`),r=O.a.getRecentFilesFromDirectory(a.to,t.daysOld),Array.isArray(e.results)?e.results=r:e.error=r.message}catch(t){h.error("Subtitles",t.message),e.error=t.message}break;case"getSubtitle":try{h.info("Subtitles",`Download subtitle for '${e.params.file}'`),e.results=await O.a.getSubtitle(e.params.file,{languages:t.languages}).catch(t=>{h.error("Subtitles",`${t.message}`),e.error=t})}catch(t){h.error("Subtitles",`${t.message}`),e.error=t.message}break;case"hasSubtitle":try{e.results=O.a.hasSubtitle(e.params.file,{languages:t.languages})}catch(t){h.error("Subtitles",t.message),e.error=t.message}break;default:h.warn("Subtitles",`Unknow method : ${e.method}`),console.warn(`[Subtitles] Unknow method : ${e.method}`)}return e}};const _="45f0dbbbdee6820d59727e39febc79e3";var I=class{constructor(){this.hostname="https://api.themoviedb.org/3",this.instance=v.a.create({baseURL:this.hostname})}static getApiKey(){return _}async getEpisodeImages(e){return await this.instance.get(`tv/${e.show.ids.tmdb}/season/${e.episode.season}/episode/${e.episode.number}/images?api_key=${_}`).then(e=>e.data.stills&&e.data.stills.length>0?e.data.stills:null).catch(e=>{console.error(e)})}async getSeasonImages(e){return await this.instance.get(`tv/${e.show.ids.tmdb}/season/${e.episode.season}/images?api_key=${_}`).then(e=>e.data.posters&&e.data.posters.length>0?e.data.posters:null).catch(e=>{console.error(e)})}async getShowImages(e){return await this.instance.get(`tv/${e.show.ids.tmdb}/images?api_key=${_}`).then(e=>e.data.backdrops&&e.data.backdrops.length>0?e.data.backdrops:null).catch(e=>{console.error(e)})}};class M{constructor(){}async init(){let e=await l.readFile("trakt-config");this.hostname="https://api.trakt.tv",this.version="2",e||(e={}),e.code&&(this.code=e.code),e.accessToken&&(this.accessToken=e.accessToken),this.instance=v.a.create({baseURL:this.hostname,headers:{Authorization:`Bearer ${this.accessToken}`,"trakt-api-key":e.clientID,"trakt-api-version":this.version}})}static async response(e){let t,a,r,s;switch(e.method){case"getAll":e.results=await l.readFile("trakt-config");break;case"update":l.writeFile("trakt-config",e.params),e.results=await l.readFile("trakt-config");break;case"getDeviceCode":try{h.info("Trakt","getDeviceCode"),t=await l.readFile("trakt-config"),a=new M,await a.init(),e.results=await a.instance.post("oauth/device/code",{client_id:t.clientID}).then(e=>e.data).catch(t=>{h.error("Trakt",t.message),e.error=t.message})}catch(t){h.error("Trakt",t.message),e.error=t.message}break;case"checkDeviceAuthorization":try{t=await l.readFile("trakt-config"),a=new M,await a.init(),e.results=await a.instance.post("oauth/device/token",{code:e.params.code,client_id:t.clientID,client_secret:t.clientSecret}).then(e=>e.data).catch(t=>{h.error("Trakt",t.message),e.error=t.message})}catch(t){h.error("Trakt",t.message),e.error=t.message}break;case"getEpisodes":try{a=new M,await a.init(),s=await a.instance.get(`calendars/my/shows/${e.params.startDate}/${e.params.days}`).then(async e=>e.data).catch(t=>{h.error("Trakt",t.message),e.error=t.message}),s&&(r=new I,s=await Promise.all(s.map(async e=>(e.images=await r.getEpisodeImages(e).catch(e=>{h.warn("Trakt",e),console.warn(e)}),e.images&&0!==e.images.length||(e.images=await r.getShowImages(e).catch(e=>{h.warn("Trakt",e),console.warn(e)})),e)))),e.results=s}catch(t){h.error("Trakt",t.message),e.error=t.message}break;case"getEpisode":try{a=new M,await a.init(),e.results=await a.instance.get(`shows/${e.params.showId}/seasons/${e.params.season}/episodes/${e.params.episode}?extended=full`).then(e=>e.data).catch(t=>{e.error=t.message})}catch(t){h.error("Trakt",t.message),e.error=t.message}break;case"getLastActivity":try{a=new M,await a.init(),e.results=await a.instance.get("sync/last_activities").then(e=>e.data).catch(t=>{e.error=t.message})}catch(t){h.error("Trakt",t.message),e.error=t.message}break;case"getWatched":try{a=new M,await a.init(),e.results=await a.instance.get("sync/watched/shows").then(e=>e.data).catch(t=>{e.error=t.message})}catch(t){h.error("Trakt",t.message),e.error=t.message}break;case"getCollected":try{a=new M,await a.init(),e.results=await a.instance.get("sync/collection/shows").then(e=>e.data).catch(t=>{e.error=t.message})}catch(t){h.error("Trakt",t.message),e.error=t.message}break;default:h.warn("Trakt",`Unknow method : ${e.method}`),console.log(`[Trakt] Unknow method : ${e.method}`)}return e}}var R=M,L=a(9),N=a.n(L);var G=class{constructor(){}static async response(e){let t;switch(e.method){case"search":try{t=await l.readFile("directory-config"),h.info("Transfert",`Searching new episode on '${t.from}'`),e.results=N.a.search(t.from,t.to),Array.isArray(e.results)||(h.error("Transfert",e.results.message),e.error=e.results.message)}catch(t){h.error("Transfert",t.message),e.error=t.message}break;case"move":try{h.info("Transfert",`Moving '${e.params.episode}'`),e.results=await N.a.move(e.params.episode)}catch(t){h.error("Transfert",t.message),e.error=t.message}break;default:h.info("Transfert",`Unknow method : ${e.method}`),console.log(`[Transfert] Unknow method : ${e.method}`)}return e}},J=a(5),z=a.n(J);var C=class{constructor(){}static async getSettings(e){try{const t=await l.readFile("transmission-config");if(t){const a=E.a.AES.decrypt(t.password,e);t.password=a.toString(E.a.enc.Utf8)}return t}catch(e){throw h.error("Transmission",e.message),new Error(e)}}static async response(e){let t;switch(e.method){case"getAll":e.results=await l.readFile("transmission-config");break;case"update":await l.writeFile("transmission-config",e.params),e.results=await l.readFile("transmission-config");break;case"add":try{t=await this.getSettings(e.params.uuid),e.results=await new Promise((a,r)=>{new z.a(t).addUrl(e.params.magnetLink,(e,t)=>{e?r(e):a(t)})}).catch(t=>{e.error=t})}catch(e){throw h.error("Transmission",e.message),new Error(e)}break;case"remove":try{t=await this.getSettings(e.params.uuid),e.results=await new Promise((a,r)=>{new z.a(t).remove(e.params.id,!0,(e,t)=>{e?r(e):a(t)})}).catch(t=>{e.error=t})}catch(e){throw h.error("Transmission",e.message),new Error(e)}break;case"active":try{t=await this.getSettings(e.params.uuid),e.results=await new Promise((e,a)=>{new z.a(t).active((t,r)=>{t?a(t):e(r)})}).catch(t=>{e.error=t})}catch(e){throw h.error("Transmission",e.message),new Error(e)}break;case"sessionStats":try{t=await this.getSettings(e.params.uuid),e.results=await new Promise((e,a)=>{new z.a(t).sessionStats((t,r)=>{t?a(t):e(r)})}).catch(t=>{h.error("Transmission",t.message),e.error=t.message})}catch(t){h.error("Transmission",t.message),e.error=t.message}break;default:h.warn("Transmission",`Unknow method : ${e.method}`)}return e}};a(6);!async function(){let e={host:"localhost",port:8080},t={cron:"* * */1 * *",enable:!0};try{await l.readFile("directory-config")}catch(e){await l.writeFile("directory-config",{})}try{await l.readFile("plex-config")}catch(e){await l.writeFile("plex-config",{})}try{e=await l.readFile("server-config")}catch(t){await l.writeFile("server-config",e)}try{await l.readFile("subtitles-config")}catch(e){await l.writeFile("subtitles-config",{})}try{await l.readFile("trakt-config")}catch(e){await l.writeFile("trakt-config",{})}try{await l.readFile("transmission-config")}catch(e){await l.writeFile("transmission-config",{})}try{t=await l.readFile("update-config")}catch(e){await l.writeFile("update-config",t)}const a=new s.a.Server({port:8080});console.log(`[Backend] Server started : ws://${e.host}:${e.port}`),h.info("Server",`Server started : ws://${e.host}:${e.port}`),a.on("connection",(function(e){e.isAlive=!0,e.on("pong",()=>{e.isAlive=!0}),e.on("message",async e=>{switch(e=JSON.parse(e),console.debug(`==== ${e.object}.${e.method}() ====`),e.object){case"activity":e=await m.response(e);break;case"directory":e=await g.response(e);break;case"download":e=await y.response(e);break;case"explorer":e=await b.response(e);break;case"fanart":e=await F.response(e);break;case"git":e=await x.response(e);break;case"plex":e=await U.response(e);break;case"server":e=await D.response(e);break;case"subtitles":e=await q.response(e);break;case"trakt":e=await R.response(e);break;case"transfert":e=await G.response(e);break;case"transmission":e=await C.response(e);break;default:h.warn("Server",`Unknow object : '${e.object}'`),console.error(`Unknow object : '${e.object}'`)}a.clients.forEach((function(t){t.readyState===s.a.OPEN&&t.send(JSON.stringify(e))}))})}))}()}]);